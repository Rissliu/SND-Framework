//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SND.KQ.DAL.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SubscriptionDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SubscriptionDataSet : global::System.Data.DataSet {
        
        private SubscriptionDataTable tableSubscription;
        
        private EndpointReferenceDataTable tableEndpointReference;
        
        private FilterNamespaceDataTable tableFilterNamespace;
        
        private global::System.Data.DataRelation relationNotifyToEndpointReference;
        
        private global::System.Data.DataRelation relationEndToEndpointReference;
        
        private global::System.Data.DataRelation relationSubscriptionFilterNamespace;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SubscriptionDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SubscriptionDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Subscription"] != null)) {
                    base.Tables.Add(new SubscriptionDataTable(ds.Tables["Subscription"]));
                }
                if ((ds.Tables["EndpointReference"] != null)) {
                    base.Tables.Add(new EndpointReferenceDataTable(ds.Tables["EndpointReference"]));
                }
                if ((ds.Tables["FilterNamespace"] != null)) {
                    base.Tables.Add(new FilterNamespaceDataTable(ds.Tables["FilterNamespace"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubscriptionDataTable Subscription {
            get {
                return this.tableSubscription;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EndpointReferenceDataTable EndpointReference {
            get {
                return this.tableEndpointReference;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FilterNamespaceDataTable FilterNamespace {
            get {
                return this.tableFilterNamespace;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SubscriptionDataSet cln = ((SubscriptionDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Subscription"] != null)) {
                    base.Tables.Add(new SubscriptionDataTable(ds.Tables["Subscription"]));
                }
                if ((ds.Tables["EndpointReference"] != null)) {
                    base.Tables.Add(new EndpointReferenceDataTable(ds.Tables["EndpointReference"]));
                }
                if ((ds.Tables["FilterNamespace"] != null)) {
                    base.Tables.Add(new FilterNamespaceDataTable(ds.Tables["FilterNamespace"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSubscription = ((SubscriptionDataTable)(base.Tables["Subscription"]));
            if ((initTable == true)) {
                if ((this.tableSubscription != null)) {
                    this.tableSubscription.InitVars();
                }
            }
            this.tableEndpointReference = ((EndpointReferenceDataTable)(base.Tables["EndpointReference"]));
            if ((initTable == true)) {
                if ((this.tableEndpointReference != null)) {
                    this.tableEndpointReference.InitVars();
                }
            }
            this.tableFilterNamespace = ((FilterNamespaceDataTable)(base.Tables["FilterNamespace"]));
            if ((initTable == true)) {
                if ((this.tableFilterNamespace != null)) {
                    this.tableFilterNamespace.InitVars();
                }
            }
            this.relationNotifyToEndpointReference = this.Relations["NotifyToEndpointReference"];
            this.relationEndToEndpointReference = this.Relations["EndToEndpointReference"];
            this.relationSubscriptionFilterNamespace = this.Relations["SubscriptionFilterNamespace"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SubscriptionDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SubscriptionDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSubscription = new SubscriptionDataTable();
            base.Tables.Add(this.tableSubscription);
            this.tableEndpointReference = new EndpointReferenceDataTable();
            base.Tables.Add(this.tableEndpointReference);
            this.tableFilterNamespace = new FilterNamespaceDataTable();
            base.Tables.Add(this.tableFilterNamespace);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("NotifyToEndpointReference", new global::System.Data.DataColumn[] {
                        this.tableEndpointReference.EndpointReferenceIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSubscription.NotifyToEndpointReferenceIdColumn});
            this.tableSubscription.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("EndToEndpointReference", new global::System.Data.DataColumn[] {
                        this.tableEndpointReference.EndpointReferenceIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSubscription.EndToEndpointReferenceIdColumn});
            this.tableSubscription.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("SubscriptionFilterNamespace", new global::System.Data.DataColumn[] {
                        this.tableSubscription.FilterIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableFilterNamespace.FilterIdColumn});
            this.tableFilterNamespace.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationNotifyToEndpointReference = new global::System.Data.DataRelation("NotifyToEndpointReference", new global::System.Data.DataColumn[] {
                        this.tableEndpointReference.EndpointReferenceIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSubscription.NotifyToEndpointReferenceIdColumn}, false);
            this.Relations.Add(this.relationNotifyToEndpointReference);
            this.relationEndToEndpointReference = new global::System.Data.DataRelation("EndToEndpointReference", new global::System.Data.DataColumn[] {
                        this.tableEndpointReference.EndpointReferenceIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSubscription.EndToEndpointReferenceIdColumn}, false);
            this.Relations.Add(this.relationEndToEndpointReference);
            this.relationSubscriptionFilterNamespace = new global::System.Data.DataRelation("SubscriptionFilterNamespace", new global::System.Data.DataColumn[] {
                        this.tableSubscription.FilterIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableFilterNamespace.FilterIdColumn}, false);
            this.Relations.Add(this.relationSubscriptionFilterNamespace);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSubscription() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEndpointReference() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFilterNamespace() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SubscriptionDataSet ds = new SubscriptionDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SubscriptionRowChangeEventHandler(object sender, SubscriptionRowChangeEvent e);
        
        public delegate void EndpointReferenceRowChangeEventHandler(object sender, EndpointReferenceRowChangeEvent e);
        
        public delegate void FilterNamespaceRowChangeEventHandler(object sender, FilterNamespaceRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubscriptionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSubscriptionId;
            
            private global::System.Data.DataColumn columnSubscriptionExpires;
            
            private global::System.Data.DataColumn columnNotifyToEndpointReferenceId;
            
            private global::System.Data.DataColumn columnEndToEndpointReferenceId;
            
            private global::System.Data.DataColumn columnFilterId;
            
            private global::System.Data.DataColumn columnFilterDialect;
            
            private global::System.Data.DataColumn columnFilterValue;
            
            private global::System.Data.DataColumn columnFilterBodyElementName;
            
            private global::System.Data.DataColumn columnFilterBodyElementNamespace;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubscriptionDataTable() {
                this.TableName = "Subscription";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SubscriptionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SubscriptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubscriptionIdColumn {
                get {
                    return this.columnSubscriptionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubscriptionExpiresColumn {
                get {
                    return this.columnSubscriptionExpires;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotifyToEndpointReferenceIdColumn {
                get {
                    return this.columnNotifyToEndpointReferenceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndToEndpointReferenceIdColumn {
                get {
                    return this.columnEndToEndpointReferenceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterIdColumn {
                get {
                    return this.columnFilterId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterDialectColumn {
                get {
                    return this.columnFilterDialect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterValueColumn {
                get {
                    return this.columnFilterValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterBodyElementNameColumn {
                get {
                    return this.columnFilterBodyElementName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterBodyElementNamespaceColumn {
                get {
                    return this.columnFilterBodyElementNamespace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubscriptionRow this[int index] {
                get {
                    return ((SubscriptionRow)(this.Rows[index]));
                }
            }
            
            public event SubscriptionRowChangeEventHandler SubscriptionRowChanging;
            
            public event SubscriptionRowChangeEventHandler SubscriptionRowChanged;
            
            public event SubscriptionRowChangeEventHandler SubscriptionRowDeleting;
            
            public event SubscriptionRowChangeEventHandler SubscriptionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSubscriptionRow(SubscriptionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubscriptionRow AddSubscriptionRow(System.Guid SubscriptionId, System.DateTime SubscriptionExpires, EndpointReferenceRow parentEndpointReferenceRowByNotifyToEndpointReference, EndpointReferenceRow parentEndpointReferenceRowByEndToEndpointReference, long FilterId, string FilterDialect, string FilterValue, string FilterBodyElementName, string FilterBodyElementNamespace) {
                SubscriptionRow rowSubscriptionRow = ((SubscriptionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SubscriptionId,
                        SubscriptionExpires,
                        null,
                        null,
                        FilterId,
                        FilterDialect,
                        FilterValue,
                        FilterBodyElementName,
                        FilterBodyElementNamespace};
                if ((parentEndpointReferenceRowByNotifyToEndpointReference != null)) {
                    columnValuesArray[2] = parentEndpointReferenceRowByNotifyToEndpointReference[0];
                }
                if ((parentEndpointReferenceRowByEndToEndpointReference != null)) {
                    columnValuesArray[3] = parentEndpointReferenceRowByEndToEndpointReference[0];
                }
                rowSubscriptionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubscriptionRow);
                return rowSubscriptionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubscriptionRow FindBySubscriptionId(System.Guid SubscriptionId) {
                return ((SubscriptionRow)(this.Rows.Find(new object[] {
                            SubscriptionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SubscriptionDataTable cln = ((SubscriptionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubscriptionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSubscriptionId = base.Columns["SubscriptionId"];
                this.columnSubscriptionExpires = base.Columns["SubscriptionExpires"];
                this.columnNotifyToEndpointReferenceId = base.Columns["NotifyToEndpointReferenceId"];
                this.columnEndToEndpointReferenceId = base.Columns["EndToEndpointReferenceId"];
                this.columnFilterId = base.Columns["FilterId"];
                this.columnFilterDialect = base.Columns["FilterDialect"];
                this.columnFilterValue = base.Columns["FilterValue"];
                this.columnFilterBodyElementName = base.Columns["FilterBodyElementName"];
                this.columnFilterBodyElementNamespace = base.Columns["FilterBodyElementNamespace"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSubscriptionId = new global::System.Data.DataColumn("SubscriptionId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubscriptionId);
                this.columnSubscriptionExpires = new global::System.Data.DataColumn("SubscriptionExpires", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubscriptionExpires);
                this.columnNotifyToEndpointReferenceId = new global::System.Data.DataColumn("NotifyToEndpointReferenceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotifyToEndpointReferenceId);
                this.columnEndToEndpointReferenceId = new global::System.Data.DataColumn("EndToEndpointReferenceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndToEndpointReferenceId);
                this.columnFilterId = new global::System.Data.DataColumn("FilterId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterId);
                this.columnFilterDialect = new global::System.Data.DataColumn("FilterDialect", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterDialect);
                this.columnFilterValue = new global::System.Data.DataColumn("FilterValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterValue);
                this.columnFilterBodyElementName = new global::System.Data.DataColumn("FilterBodyElementName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterBodyElementName);
                this.columnFilterBodyElementNamespace = new global::System.Data.DataColumn("FilterBodyElementNamespace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterBodyElementNamespace);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("SubscriptionDataSetKey1", new global::System.Data.DataColumn[] {
                                this.columnSubscriptionId}, true));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("SubscriptionDataSetKey3", new global::System.Data.DataColumn[] {
                                this.columnFilterId}, false));
                this.columnSubscriptionId.AllowDBNull = false;
                this.columnSubscriptionId.Unique = true;
                this.columnNotifyToEndpointReferenceId.AllowDBNull = false;
                this.columnFilterId.AllowDBNull = false;
                this.columnFilterId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubscriptionRow NewSubscriptionRow() {
                return ((SubscriptionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubscriptionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SubscriptionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubscriptionRowChanged != null)) {
                    this.SubscriptionRowChanged(this, new SubscriptionRowChangeEvent(((SubscriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubscriptionRowChanging != null)) {
                    this.SubscriptionRowChanging(this, new SubscriptionRowChangeEvent(((SubscriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubscriptionRowDeleted != null)) {
                    this.SubscriptionRowDeleted(this, new SubscriptionRowChangeEvent(((SubscriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubscriptionRowDeleting != null)) {
                    this.SubscriptionRowDeleting(this, new SubscriptionRowChangeEvent(((SubscriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSubscriptionRow(SubscriptionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SubscriptionDataSet ds = new SubscriptionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubscriptionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EndpointReferenceDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEndpointReferenceId;
            
            private global::System.Data.DataColumn columnEndpointReferenceAddress;
            
            private global::System.Data.DataColumn columnReferencePropertiesId;
            
            private global::System.Data.DataColumn columnPortTypeId;
            
            private global::System.Data.DataColumn columnReferencePropertiesFragment;
            
            private global::System.Data.DataColumn columnPortTypeName;
            
            private global::System.Data.DataColumn columnPortTypeNamespace;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EndpointReferenceDataTable() {
                this.TableName = "EndpointReference";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EndpointReferenceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EndpointReferenceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndpointReferenceIdColumn {
                get {
                    return this.columnEndpointReferenceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndpointReferenceAddressColumn {
                get {
                    return this.columnEndpointReferenceAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferencePropertiesIdColumn {
                get {
                    return this.columnReferencePropertiesId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PortTypeIdColumn {
                get {
                    return this.columnPortTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferencePropertiesFragmentColumn {
                get {
                    return this.columnReferencePropertiesFragment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PortTypeNameColumn {
                get {
                    return this.columnPortTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PortTypeNamespaceColumn {
                get {
                    return this.columnPortTypeNamespace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EndpointReferenceRow this[int index] {
                get {
                    return ((EndpointReferenceRow)(this.Rows[index]));
                }
            }
            
            public event EndpointReferenceRowChangeEventHandler EndpointReferenceRowChanging;
            
            public event EndpointReferenceRowChangeEventHandler EndpointReferenceRowChanged;
            
            public event EndpointReferenceRowChangeEventHandler EndpointReferenceRowDeleting;
            
            public event EndpointReferenceRowChangeEventHandler EndpointReferenceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEndpointReferenceRow(EndpointReferenceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EndpointReferenceRow AddEndpointReferenceRow(string EndpointReferenceAddress, long ReferencePropertiesId, long PortTypeId, string ReferencePropertiesFragment, string PortTypeName, string PortTypeNamespace) {
                EndpointReferenceRow rowEndpointReferenceRow = ((EndpointReferenceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EndpointReferenceAddress,
                        ReferencePropertiesId,
                        PortTypeId,
                        ReferencePropertiesFragment,
                        PortTypeName,
                        PortTypeNamespace};
                rowEndpointReferenceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEndpointReferenceRow);
                return rowEndpointReferenceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EndpointReferenceRow FindByEndpointReferenceId(long EndpointReferenceId) {
                return ((EndpointReferenceRow)(this.Rows.Find(new object[] {
                            EndpointReferenceId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EndpointReferenceDataTable cln = ((EndpointReferenceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EndpointReferenceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEndpointReferenceId = base.Columns["EndpointReferenceId"];
                this.columnEndpointReferenceAddress = base.Columns["EndpointReferenceAddress"];
                this.columnReferencePropertiesId = base.Columns["ReferencePropertiesId"];
                this.columnPortTypeId = base.Columns["PortTypeId"];
                this.columnReferencePropertiesFragment = base.Columns["ReferencePropertiesFragment"];
                this.columnPortTypeName = base.Columns["PortTypeName"];
                this.columnPortTypeNamespace = base.Columns["PortTypeNamespace"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEndpointReferenceId = new global::System.Data.DataColumn("EndpointReferenceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndpointReferenceId);
                this.columnEndpointReferenceAddress = new global::System.Data.DataColumn("EndpointReferenceAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndpointReferenceAddress);
                this.columnReferencePropertiesId = new global::System.Data.DataColumn("ReferencePropertiesId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferencePropertiesId);
                this.columnPortTypeId = new global::System.Data.DataColumn("PortTypeId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortTypeId);
                this.columnReferencePropertiesFragment = new global::System.Data.DataColumn("ReferencePropertiesFragment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferencePropertiesFragment);
                this.columnPortTypeName = new global::System.Data.DataColumn("PortTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortTypeName);
                this.columnPortTypeNamespace = new global::System.Data.DataColumn("PortTypeNamespace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortTypeNamespace);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("SubscriptionDataSetKey5", new global::System.Data.DataColumn[] {
                                this.columnEndpointReferenceId}, true));
                this.columnEndpointReferenceId.AutoIncrement = true;
                this.columnEndpointReferenceId.AllowDBNull = false;
                this.columnEndpointReferenceId.ReadOnly = true;
                this.columnEndpointReferenceId.Unique = true;
                this.columnEndpointReferenceAddress.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EndpointReferenceRow NewEndpointReferenceRow() {
                return ((EndpointReferenceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EndpointReferenceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EndpointReferenceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EndpointReferenceRowChanged != null)) {
                    this.EndpointReferenceRowChanged(this, new EndpointReferenceRowChangeEvent(((EndpointReferenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EndpointReferenceRowChanging != null)) {
                    this.EndpointReferenceRowChanging(this, new EndpointReferenceRowChangeEvent(((EndpointReferenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EndpointReferenceRowDeleted != null)) {
                    this.EndpointReferenceRowDeleted(this, new EndpointReferenceRowChangeEvent(((EndpointReferenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EndpointReferenceRowDeleting != null)) {
                    this.EndpointReferenceRowDeleting(this, new EndpointReferenceRowChangeEvent(((EndpointReferenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEndpointReferenceRow(EndpointReferenceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SubscriptionDataSet ds = new SubscriptionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EndpointReferenceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FilterNamespaceDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFilterId;
            
            private global::System.Data.DataColumn columnFilterNamespacePrefix;
            
            private global::System.Data.DataColumn columnFilterNamespaceNamespace;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FilterNamespaceDataTable() {
                this.TableName = "FilterNamespace";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FilterNamespaceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FilterNamespaceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterIdColumn {
                get {
                    return this.columnFilterId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterNamespacePrefixColumn {
                get {
                    return this.columnFilterNamespacePrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterNamespaceNamespaceColumn {
                get {
                    return this.columnFilterNamespaceNamespace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FilterNamespaceRow this[int index] {
                get {
                    return ((FilterNamespaceRow)(this.Rows[index]));
                }
            }
            
            public event FilterNamespaceRowChangeEventHandler FilterNamespaceRowChanging;
            
            public event FilterNamespaceRowChangeEventHandler FilterNamespaceRowChanged;
            
            public event FilterNamespaceRowChangeEventHandler FilterNamespaceRowDeleting;
            
            public event FilterNamespaceRowChangeEventHandler FilterNamespaceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFilterNamespaceRow(FilterNamespaceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FilterNamespaceRow AddFilterNamespaceRow(SubscriptionRow parentSubscriptionRowBySubscriptionFilterNamespace, string FilterNamespacePrefix, string FilterNamespaceNamespace) {
                FilterNamespaceRow rowFilterNamespaceRow = ((FilterNamespaceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FilterNamespacePrefix,
                        FilterNamespaceNamespace};
                if ((parentSubscriptionRowBySubscriptionFilterNamespace != null)) {
                    columnValuesArray[0] = parentSubscriptionRowBySubscriptionFilterNamespace[4];
                }
                rowFilterNamespaceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFilterNamespaceRow);
                return rowFilterNamespaceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FilterNamespaceRow FindByFilterIdFilterNamespacePrefix(long FilterId, string FilterNamespacePrefix) {
                return ((FilterNamespaceRow)(this.Rows.Find(new object[] {
                            FilterId,
                            FilterNamespacePrefix})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FilterNamespaceDataTable cln = ((FilterNamespaceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FilterNamespaceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFilterId = base.Columns["FilterId"];
                this.columnFilterNamespacePrefix = base.Columns["FilterNamespacePrefix"];
                this.columnFilterNamespaceNamespace = base.Columns["FilterNamespaceNamespace"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFilterId = new global::System.Data.DataColumn("FilterId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterId);
                this.columnFilterNamespacePrefix = new global::System.Data.DataColumn("FilterNamespacePrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterNamespacePrefix);
                this.columnFilterNamespaceNamespace = new global::System.Data.DataColumn("FilterNamespaceNamespace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterNamespaceNamespace);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("SubscriptionDataSetKey2", new global::System.Data.DataColumn[] {
                                this.columnFilterId,
                                this.columnFilterNamespacePrefix}, true));
                this.columnFilterId.AllowDBNull = false;
                this.columnFilterNamespacePrefix.AllowDBNull = false;
                this.columnFilterNamespaceNamespace.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FilterNamespaceRow NewFilterNamespaceRow() {
                return ((FilterNamespaceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FilterNamespaceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FilterNamespaceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FilterNamespaceRowChanged != null)) {
                    this.FilterNamespaceRowChanged(this, new FilterNamespaceRowChangeEvent(((FilterNamespaceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FilterNamespaceRowChanging != null)) {
                    this.FilterNamespaceRowChanging(this, new FilterNamespaceRowChangeEvent(((FilterNamespaceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FilterNamespaceRowDeleted != null)) {
                    this.FilterNamespaceRowDeleted(this, new FilterNamespaceRowChangeEvent(((FilterNamespaceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FilterNamespaceRowDeleting != null)) {
                    this.FilterNamespaceRowDeleting(this, new FilterNamespaceRowChangeEvent(((FilterNamespaceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFilterNamespaceRow(FilterNamespaceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SubscriptionDataSet ds = new SubscriptionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FilterNamespaceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SubscriptionRow : global::System.Data.DataRow {
            
            private SubscriptionDataTable tableSubscription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SubscriptionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubscription = ((SubscriptionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid SubscriptionId {
                get {
                    return ((global::System.Guid)(this[this.tableSubscription.SubscriptionIdColumn]));
                }
                set {
                    this[this.tableSubscription.SubscriptionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SubscriptionExpires {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSubscription.SubscriptionExpiresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubscriptionExpires\' in table \'Subscription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubscription.SubscriptionExpiresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NotifyToEndpointReferenceId {
                get {
                    return ((long)(this[this.tableSubscription.NotifyToEndpointReferenceIdColumn]));
                }
                set {
                    this[this.tableSubscription.NotifyToEndpointReferenceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long EndToEndpointReferenceId {
                get {
                    try {
                        return ((long)(this[this.tableSubscription.EndToEndpointReferenceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndToEndpointReferenceId\' in table \'Subscription\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSubscription.EndToEndpointReferenceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FilterId {
                get {
                    return ((long)(this[this.tableSubscription.FilterIdColumn]));
                }
                set {
                    this[this.tableSubscription.FilterIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilterDialect {
                get {
                    try {
                        return ((string)(this[this.tableSubscription.FilterDialectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilterDialect\' in table \'Subscription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubscription.FilterDialectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilterValue {
                get {
                    try {
                        return ((string)(this[this.tableSubscription.FilterValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilterValue\' in table \'Subscription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubscription.FilterValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilterBodyElementName {
                get {
                    try {
                        return ((string)(this[this.tableSubscription.FilterBodyElementNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilterBodyElementName\' in table \'Subscription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubscription.FilterBodyElementNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilterBodyElementNamespace {
                get {
                    try {
                        return ((string)(this[this.tableSubscription.FilterBodyElementNamespaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilterBodyElementNamespace\' in table \'Subscription\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSubscription.FilterBodyElementNamespaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EndpointReferenceRow EndpointReferenceRowByNotifyToEndpointReference {
                get {
                    return ((EndpointReferenceRow)(this.GetParentRow(this.Table.ParentRelations["NotifyToEndpointReference"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["NotifyToEndpointReference"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EndpointReferenceRow EndpointReferenceRowByEndToEndpointReference {
                get {
                    return ((EndpointReferenceRow)(this.GetParentRow(this.Table.ParentRelations["EndToEndpointReference"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["EndToEndpointReference"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubscriptionExpiresNull() {
                return this.IsNull(this.tableSubscription.SubscriptionExpiresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubscriptionExpiresNull() {
                this[this.tableSubscription.SubscriptionExpiresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndToEndpointReferenceIdNull() {
                return this.IsNull(this.tableSubscription.EndToEndpointReferenceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndToEndpointReferenceIdNull() {
                this[this.tableSubscription.EndToEndpointReferenceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFilterDialectNull() {
                return this.IsNull(this.tableSubscription.FilterDialectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFilterDialectNull() {
                this[this.tableSubscription.FilterDialectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFilterValueNull() {
                return this.IsNull(this.tableSubscription.FilterValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFilterValueNull() {
                this[this.tableSubscription.FilterValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFilterBodyElementNameNull() {
                return this.IsNull(this.tableSubscription.FilterBodyElementNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFilterBodyElementNameNull() {
                this[this.tableSubscription.FilterBodyElementNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFilterBodyElementNamespaceNull() {
                return this.IsNull(this.tableSubscription.FilterBodyElementNamespaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFilterBodyElementNamespaceNull() {
                this[this.tableSubscription.FilterBodyElementNamespaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FilterNamespaceRow[] GetFilterNamespaceRows() {
                if ((this.Table.ChildRelations["SubscriptionFilterNamespace"] == null)) {
                    return new FilterNamespaceRow[0];
                }
                else {
                    return ((FilterNamespaceRow[])(base.GetChildRows(this.Table.ChildRelations["SubscriptionFilterNamespace"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EndpointReferenceRow : global::System.Data.DataRow {
            
            private EndpointReferenceDataTable tableEndpointReference;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EndpointReferenceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEndpointReference = ((EndpointReferenceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long EndpointReferenceId {
                get {
                    return ((long)(this[this.tableEndpointReference.EndpointReferenceIdColumn]));
                }
                set {
                    this[this.tableEndpointReference.EndpointReferenceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndpointReferenceAddress {
                get {
                    return ((string)(this[this.tableEndpointReference.EndpointReferenceAddressColumn]));
                }
                set {
                    this[this.tableEndpointReference.EndpointReferenceAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ReferencePropertiesId {
                get {
                    try {
                        return ((long)(this[this.tableEndpointReference.ReferencePropertiesIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferencePropertiesId\' in table \'EndpointReference\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableEndpointReference.ReferencePropertiesIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PortTypeId {
                get {
                    try {
                        return ((long)(this[this.tableEndpointReference.PortTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortTypeId\' in table \'EndpointReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEndpointReference.PortTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferencePropertiesFragment {
                get {
                    try {
                        return ((string)(this[this.tableEndpointReference.ReferencePropertiesFragmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferencePropertiesFragment\' in table \'EndpointReference\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableEndpointReference.ReferencePropertiesFragmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PortTypeName {
                get {
                    try {
                        return ((string)(this[this.tableEndpointReference.PortTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortTypeName\' in table \'EndpointReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEndpointReference.PortTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PortTypeNamespace {
                get {
                    try {
                        return ((string)(this[this.tableEndpointReference.PortTypeNamespaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortTypeNamespace\' in table \'EndpointReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEndpointReference.PortTypeNamespaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferencePropertiesIdNull() {
                return this.IsNull(this.tableEndpointReference.ReferencePropertiesIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferencePropertiesIdNull() {
                this[this.tableEndpointReference.ReferencePropertiesIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPortTypeIdNull() {
                return this.IsNull(this.tableEndpointReference.PortTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPortTypeIdNull() {
                this[this.tableEndpointReference.PortTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferencePropertiesFragmentNull() {
                return this.IsNull(this.tableEndpointReference.ReferencePropertiesFragmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferencePropertiesFragmentNull() {
                this[this.tableEndpointReference.ReferencePropertiesFragmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPortTypeNameNull() {
                return this.IsNull(this.tableEndpointReference.PortTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPortTypeNameNull() {
                this[this.tableEndpointReference.PortTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPortTypeNamespaceNull() {
                return this.IsNull(this.tableEndpointReference.PortTypeNamespaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPortTypeNamespaceNull() {
                this[this.tableEndpointReference.PortTypeNamespaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubscriptionRow[] GetSubscriptionRowsByNotifyToEndpointReference() {
                if ((this.Table.ChildRelations["NotifyToEndpointReference"] == null)) {
                    return new SubscriptionRow[0];
                }
                else {
                    return ((SubscriptionRow[])(base.GetChildRows(this.Table.ChildRelations["NotifyToEndpointReference"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubscriptionRow[] GetSubscriptionRowsByEndToEndpointReference() {
                if ((this.Table.ChildRelations["EndToEndpointReference"] == null)) {
                    return new SubscriptionRow[0];
                }
                else {
                    return ((SubscriptionRow[])(base.GetChildRows(this.Table.ChildRelations["EndToEndpointReference"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FilterNamespaceRow : global::System.Data.DataRow {
            
            private FilterNamespaceDataTable tableFilterNamespace;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FilterNamespaceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFilterNamespace = ((FilterNamespaceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FilterId {
                get {
                    return ((long)(this[this.tableFilterNamespace.FilterIdColumn]));
                }
                set {
                    this[this.tableFilterNamespace.FilterIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilterNamespacePrefix {
                get {
                    return ((string)(this[this.tableFilterNamespace.FilterNamespacePrefixColumn]));
                }
                set {
                    this[this.tableFilterNamespace.FilterNamespacePrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilterNamespaceNamespace {
                get {
                    return ((string)(this[this.tableFilterNamespace.FilterNamespaceNamespaceColumn]));
                }
                set {
                    this[this.tableFilterNamespace.FilterNamespaceNamespaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubscriptionRow SubscriptionRow {
                get {
                    return ((SubscriptionRow)(this.GetParentRow(this.Table.ParentRelations["SubscriptionFilterNamespace"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SubscriptionFilterNamespace"]);
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SubscriptionRowChangeEvent : global::System.EventArgs {
            
            private SubscriptionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubscriptionRowChangeEvent(SubscriptionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubscriptionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EndpointReferenceRowChangeEvent : global::System.EventArgs {
            
            private EndpointReferenceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EndpointReferenceRowChangeEvent(EndpointReferenceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EndpointReferenceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FilterNamespaceRowChangeEvent : global::System.EventArgs {
            
            private FilterNamespaceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FilterNamespaceRowChangeEvent(FilterNamespaceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FilterNamespaceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591